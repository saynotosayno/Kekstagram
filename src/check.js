'use strict';
/*eslint no-unused-vars: ["error", { "varsIgnorePattern": "getMessage" }]*/

function getMessage(a, b) {
  if (typeof a === 'boolean') {
    if (a) {
      return 'Переданное GIF-изображение анимировано и содержит ' + b + ' кадров';
    } else {
      return 'Переданное GIF-изображение не анимировано';
    }
  } else if (typeof a === 'number') {
    return 'Переданное SVG-изображение содержит ' + a + ' объектов и ' + (b * 4) + ' атрибутов';
  } else if (Array.isArray(a) && Array.isArray(b)) {
    return 'Общая площадь артефактов сжатия: ' + calcSquare(a, b) + ' пикселей';
  } else if (Array.isArray(a)) {
    return 'Количество красных точек во всех строчках изображения: ' + calcSum(a);
  }

  return 'Неподдерживаемый формат изображения';
}

function calcSquare(a, b) {
  var square = 0;
  for (var i = 0; i < a.length; i++) {
    square += a[i] * b[i];
  }
  return square;
}

function calcSum(a) {
  var sum = 0;
  for (var i = 0; i < a.length; i++) {
    sum += a[i];
  }
  return sum;
}
/*
Если первый аргумент, a, имеет тип boolean, то:
    Если он true, вернуть строку, в которую подставлен параметр b:
        "Переданное GIF-изображение анимировано и содержит [b] кадров"
    Если он false, то вернуть строку:
        "Переданное GIF-изображение не анимировано"

Если первый аргумент имеет числовой тип, то вернуть строку:
    "Переданное SVG-изображение содержит [a] объектов и [b * 4] атрибутов"

Если первый аргумент массив, то вернуть строку:
    "Количество красных точек во всех строчках изображения: [sum]"
    где [sum] — это сумма значений переданного массива

Если оба аргумента массивы, то вернуть строку:
    "Общая площадь артефактов сжатия: [square] пикселей"
    где [square] — это сумма произведений соответствующих элементов массивов a и b,
    cумма произведения первого элемента a с первым элементом b, второго со вторым и так далее
*/
